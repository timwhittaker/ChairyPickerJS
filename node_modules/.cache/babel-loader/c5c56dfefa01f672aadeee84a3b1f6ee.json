{"ast":null,"code":"/** \n * Box-Muller implementation\n * https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n */\n(function (exports) {\n  const PRECISION = 1e9;\n\n  const _2PI = Math.PI * 2;\n\n  function generateGaussian(mean, std) {\n    var u1 = Math.random();\n    var u2 = Math.random();\n    var z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(_2PI * u2);\n    var z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.sin(_2PI * u2);\n    return z0 * std + mean;\n  }\n\n  exports(generateGaussian);\n})(typeof exports !== \"undefined\" ? function (e) {\n  module.exports = e;\n} // istanbul ignore next\n: function (e) {\n  this[\"boxmuller\"] = e;\n});","map":{"version":3,"sources":["/home/tim/Documents/BasicReact/test/src/box-muller.js"],"names":["exports","PRECISION","_2PI","Math","PI","generateGaussian","mean","std","u1","random","u2","z0","sqrt","log","cos","z1","sin","e","module"],"mappings":"AAAA;AACA;AACA;AACA;AAEC,CAAC,UAASA,OAAT,EAAiB;AACf,QAAMC,SAAS,GAAG,GAAlB;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAvB;;AACA,WAASC,gBAAT,CAA0BC,IAA1B,EAA+BC,GAA/B,EAAmC;AACjC,QAAIC,EAAE,GAAGL,IAAI,CAACM,MAAL,EAAT;AACA,QAAIC,EAAE,GAAGP,IAAI,CAACM,MAAL,EAAT;AAEA,QAAIE,EAAE,GAAGR,IAAI,CAACS,IAAL,CAAU,CAAC,GAAD,GAAOT,IAAI,CAACU,GAAL,CAASL,EAAT,CAAjB,IAAiCL,IAAI,CAACW,GAAL,CAASZ,IAAI,GAAGQ,EAAhB,CAA1C;AACA,QAAIK,EAAE,GAAGZ,IAAI,CAACS,IAAL,CAAU,CAAC,GAAD,GAAOT,IAAI,CAACU,GAAL,CAASL,EAAT,CAAjB,IAAiCL,IAAI,CAACa,GAAL,CAASd,IAAI,GAAGQ,EAAhB,CAA1C;AAEA,WAAOC,EAAE,GAAGJ,GAAL,GAAWD,IAAlB;AACD;;AAEDN,EAAAA,OAAO,CAACK,gBAAD,CAAP;AACD,CAdF,EAeE,OAAOL,OAAP,KAAoB,WAApB,GACK,UAASiB,CAAT,EAAY;AAAEC,EAAAA,MAAM,CAAClB,OAAP,GAAiBiB,CAAjB;AAAqB,CADxC,CAEG;AAFH,EAGK,UAASA,CAAT,EAAY;AAAE,OAAK,WAAL,IAAoBA,CAApB;AAAwB,CAlB7C","sourcesContent":["/** \n * Box-Muller implementation\n * https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n */\n\n (function(exports){\n    const PRECISION = 1e9;\n    const _2PI = Math.PI * 2;\n    function generateGaussian(mean,std){\n      var u1 = Math.random();\n      var u2 = Math.random();\n      \n      var z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(_2PI * u2);\n      var z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.sin(_2PI * u2);\n  \n      return z0 * std + mean;\n    }\n  \n    exports(generateGaussian)\n  })\n  (typeof(exports) !== \"undefined\"\n      ? function(e) { module.exports = e; }\n      // istanbul ignore next\n      : function(e) { this[\"boxmuller\"] = e; });\n    "]},"metadata":{},"sourceType":"module"}