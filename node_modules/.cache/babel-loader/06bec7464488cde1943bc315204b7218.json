{"ast":null,"code":"var _jsxFileName = \"/home/tim/Documents/BasicReact/test/src/index.js\";\n// Helper styles for demo\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Speakers from \"./field-array\";\nimport Commenters from \"./field-array-commenters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"app\",\n  children: [/*#__PURE__*/_jsxDEV(Speakers, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Commenters, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      type: \"text-field\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      type: Yup.string().required()\n    }),\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            display: \"block\"\n          },\n          children: \"Current Chair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-question\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"ChairName\",\n                placeholder: \"Chair Name\",\n                type: \"text\",\n                value: values.email,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                className: errors.email && touched.email ? \"text-input error\" : \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"outline\",\n          onClick: handleReset,\n          disabled: !dirty || isSubmitting,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tim/Documents/BasicReact/test/src/index.js"],"names":["MoreResources","DisplayFormikState","React","render","Formik","Yup","Speakers","Commenters","App","email","type","object","shape","string","required","props","values","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display","document","getElementById"],"mappings":";AAAA;AACA,OAAO,cAAP;AACA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,UAAlD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,GAAG,GAAG,mBACV;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,0BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KADjB;AAEE,IAAA,gBAAgB,EAAEL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,MAAAA,KAAK,EAAEJ,GAAG,CAACQ,MAAJ,GAAaJ,KAAb,GAAqBK,QAArB,CAA8B,UAA9B,CAD4B;AAEnCJ,MAAAA,IAAI,EAAEL,GAAG,CAACQ,MAAJ,GAAaC,QAAb;AAF6B,KAAnB,CAFpB;AAAA,cAOIC,KAAD,IAAW;AACV,YAAM;AACJC,QAAAA,MADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA,MAHI;AAIJC,QAAAA,KAJI;AAKJC,QAAAA,YALI;AAMJC,QAAAA,YANI;AAOJC,QAAAA,UAPI;AAQJC,QAAAA,YARI;AASJC,QAAAA;AATI,UAUFT,KAVJ;AAWA,0BACE;AAAM,QAAA,QAAQ,EAAEQ,YAAhB;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AACE,gBAAA,EAAE,EAAC,WADL;AAEE,gBAAA,WAAW,EAAC,YAFd;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAET,MAAM,CAACP,KAJhB;AAKE,gBAAA,QAAQ,EAAEY,YALZ;AAME,gBAAA,MAAM,EAAEC,UANV;AAOE,gBAAA,SAAS,EACPJ,MAAM,CAACT,KAAP,IAAgBQ,OAAO,CAACR,KAAxB,GACI,kBADJ,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqBE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,SAFZ;AAGE,UAAA,OAAO,EAAEe,WAHX;AAIE,UAAA,QAAQ,EAAE,CAACL,KAAD,IAAUC,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eA6BE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAmCD;AAtDH;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMZ,G;AA+DNL,MAAM,eAAC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAUuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["// Helper styles for demo\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Speakers from \"./field-array\";\nimport Commenters from \"./field-array-commenters\";\n\nconst App = () => (\n  <div className=\"app\">\n    <Speakers />\n    <Commenters />\n    <Formik\n      initialValues={{ email: \"\", type: \"text-field\" }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        type: Yup.string().required()\n      })}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <h1 style={{ display: \"block\" }}>Current Chair</h1>\n            <div className=\"custom-question\">\n              <div className=\"field-wrapper\">\n                <div className=\"form-group\">\n                  <input\n                    id=\"ChairName\"\n                    placeholder=\"Chair Name\"\n                    type=\"text\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.email && touched.email\n                        ? \"text-input error\"\n                        : \"text-input\"\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className=\"outline\"\n              onClick={handleReset}\n              disabled={!dirty || isSubmitting}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}