{"ast":null,"code":"'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nfunction equal(a, b) {\n  if (a === b) return true;\n  var arrA = isArray(a),\n      arrB = isArray(b),\n      i,\n      length,\n      key;\n\n  if (arrA && arrB) {\n    length = a.length;\n    if (length != b.length) return false;\n\n    for (i = 0; i < length; i++) if (!equal(a[i], b[i])) return false;\n\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n  var dateA = a instanceof Date,\n      dateB = b instanceof Date;\n  if (dateA != dateB) return false;\n  if (dateA && dateB) return a.getTime() == b.getTime();\n  var regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n  if (regexpA != regexpB) return false;\n  if (regexpA && regexpB) return a.toString() == b.toString();\n\n  if (a instanceof Object && b instanceof Object) {\n    var keys = keyList(a);\n    length = keys.length;\n    if (length !== keyList(b).length) return false;\n\n    for (i = 0; i < length; i++) if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n\n      if (key === '_owner' && a.$$typeof && a._store) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    } // some other error. we should definitely know about these\n\n\n    throw error;\n  }\n};","map":{"version":3,"sources":["/home/tim/Documents/BasicReact/test/node_modules/react-fast-compare/index.js"],"names":["isArray","Array","keyList","Object","keys","hasProp","prototype","hasOwnProperty","equal","a","b","arrA","arrB","i","length","key","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","call","$$typeof","_store","module","exports","exportedEqual","error","message","match","console","warn","name"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nfunction equal(a, b) {\n  if (a === b) return true;\n\n  var arrA = isArray(a)\n    , arrB = isArray(b)\n    , i\n    , length\n    , key;\n\n  if (arrA && arrB) {\n    length = a.length;\n    if (length != b.length) return false;\n    for (i = 0; i < length; i++)\n      if (!equal(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  var dateA = a instanceof Date\n    , dateB = b instanceof Date;\n  if (dateA != dateB) return false;\n  if (dateA && dateB) return a.getTime() == b.getTime();\n\n  var regexpA = a instanceof RegExp\n    , regexpB = b instanceof RegExp;\n  if (regexpA != regexpB) return false;\n  if (regexpA && regexpB) return a.toString() == b.toString();\n\n  if (a instanceof Object && b instanceof Object) {\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = 0; i < length; i++)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof && a._store) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}